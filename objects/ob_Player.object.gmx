<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Player</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///moove

var hspd = 0;
var vspd = 0;
var speed_init = 3;

// crucnh

if (keyboard_check(ord('Z'))) {
    vspd -= speed_init;
}


if (keyboard_check(ord('Q'))) {
        hspd -= speed_init;
}

if (keyboard_check(ord('S'))) {
    vspd += speed_init;
}

if (keyboard_check(ord('D'))) {
    hspd += speed_init;
}

if (keyboard_check(vk_control)){
    if (keyboard_check(ord('Q'))){
        hspd -= -1.5;
    }
}

if (keyboard_check(vk_control)){
    if (keyboard_check(ord('D'))){
        hspd += -1.5;
    }
}
x += hspd;
y += vspd;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation moove

if (x &gt; xprevious &amp;&amp; y &gt; yprevious)
{
    if (sprite_index != spr_Player_down_right)
        sprite_index = spr_Player_down_right;
    image_speed = 0.30;
}
else if (x &gt; xprevious &amp;&amp; y &lt; yprevious)
{
    if (sprite_index != spr_Player_up_right)
        sprite_index = spr_Player_up_right;
    image_speed = 0.30;
}
else if (x &lt; xprevious &amp;&amp; y &gt; yprevious)
{
    if (sprite_index != spr_Player_down_left)
        sprite_index = spr_Player_down_left;
    image_speed = 0.30;
}
else if (y &lt; xprevious &amp;&amp; x &lt; yprevious)
{
    if (sprite_index != spr_Player_up_left)
        sprite_index = spr_Player_up_left;
    image_speed = 0.30;
}
else if (x &gt; xprevious)
{
    if (sprite_index != spr_Player_right)
        sprite_index = spr_Player_right;
    image_speed = 0.30;
}
/*
else if (keyboard_check(vk_control)){
    if (keyboard_check(ord('Q'))){
        if (sprite_index != spr_Player_crunch_left)
            sprite_index = spr_Player_crunch_left;
        image_speed = 0.30;        
    }
}

else if (keyboard_check(vk_control)){
    if (keyboard_check(ord('D'))){
        if (sprite_index != spr_Player_crunch_right)
            sprite_index = spr_Player_crunch_right;
        image_speed = 0.30;        
    }
}
*/
else if (x &lt; xprevious)
{
    if (sprite_index != spr_Player_left)
        sprite_index = spr_Player_left;
    image_speed = 0.15;
}
else if (y &gt; yprevious)
{
    if (sprite_index != spr_Player_down)
        sprite_index = spr_Player_down;
    image_speed = 0.15;
}
else if (y &lt; yprevious)
{
    if (sprite_index != spr_Player_Up)
        sprite_index = spr_Player_Up;
    image_speed = 0.15;
}
else
{
    image_index = 0;
    image_speed = 0;
}
if (keyboard_check(vk_control)){
    if (keyboard_check(ord('D'))){
        if (sprite_index != spr_Player_crunch_right)
            sprite_index = spr_Player_crunch_right;
        image_speed = 0.30;        
    }
}

if (keyboard_check(vk_control)){
    if (keyboard_check(ord('Q'))){
        if (sprite_index != spr_Player_crunch_left)
            sprite_index = spr_Player_crunch_left;
        image_speed = 0.30;        
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
